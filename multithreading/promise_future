#include <iostream>
#include <thread>
#include <chrono>
#include<future>
#include<mutex>
#include<chrono>
#include<condition_variable>
using namespace std;
using namespace chrono;
void EvenNosFind(promise<int>&& EvenPromise, int begin, int end)
{
    int evenNo = 0;
    for (int i = begin; i <= end; i++) {
        if (i % 2 == 0) {
            evenNo += 1;
        }
    }
    this_thread::sleep_for(seconds(10));
    EvenPromise.set_value(evenNo);
   
}

// driver code
int main()
{
    int begin = 0, end = 1000;
    promise<int> evenNo;
    future<int> evenFuture = evenNo.get_future();//to wait  for the value
    cout << "My thread is created !!!" << endl;
    thread t1(EvenNosFind, move(evenNo), begin, end);
    cout << "Waiting..........." << endl;

    // getting the data
    cout << "The no. of even numbers are : " << evenFuture.get() << endl;
    t1.join();
    return 0;
}
//My thread is created !!!
//Waiting...........  here the prgram waited for 10 seconds
//The no.of even numbers are : 501
